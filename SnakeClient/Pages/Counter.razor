@page "/counter"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@using System.Net.Http.Json
@using System.Text.Json
@inject HttpClient Http
@inject IJSRuntime JSRuntime

<PageTitle>对局记录</PageTitle>
<div class="content-field">
    <div class="table-container">
        <table class="table table-striped table-hover">
            <thead class="table-header">
                <tr>
                    <th class="text-left">序号</th>
                    <th class="text-left">玩家A</th>
                    <th class="text-left">玩家B</th>
                    <th class="text-left">获胜者</th>
                    <th class="text-left">对战时间</th>
                </tr>
            </thead>
            <tbody>
                @{
                    int index = 0;
                }
               @foreach (var record in records)
                    {
                        <tr>
                        <td>@(++index)</td>
                            <td>
                                <img src="@record.APhoto" alt="玩家A头像" class="record-user-photo" />
                                &nbsp;
                                <span class="record-user-username">@record.AUsername</span>
                            </td>
                            <td>
                                <img src="@record.BPhoto" alt="玩家B头像" class="record-user-photo" />
                                &nbsp;
                                <span class="record-user-username">@record.BUsername</span>
                            </td>
                            <td>@record.Winner</td>
                            <td>@record.Time</td>
                        </tr>
                    }
            </tbody>
        </table>
    </div>
</div>

@code {
    public class Record
    {
        public required string AUsername { get; set; }
        public required string APhoto { get; set; }
        public required string BUsername { get; set; }
        public required string BPhoto { get; set; }
        public required string Winner { get; set; }
        public required DateTime Time { get; set; }
    }
    private List<Record> records = new List<Record>();
    protected override async Task OnInitializedAsync()
    {
        await RefreshRecords();
    }

    private async Task RefreshRecords()
    {
        records.Clear();
        records = await Http.GetFromJsonAsync<List<Record>>($"http://localhost:5081/api/record/getlist");
        StateHasChanged();
    }

}

<style>
.content-field {
    padding: 20px;
    background-color: #fff;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.table-container {
    height: 810px;
    overflow-y: auto;
    border: 1px solid #dee2e6;
    border-radius: 4px;
}

.table {
    margin-bottom: 0;
}

.table-header {
    position: sticky;
    top: 0;
    background-color: #f8f9fa;
    z-index: 10;
}

.table-header th {
    border-bottom: 2px solid #dee2e6;
    font-weight: 600;
    padding: 12px 8px;
}

.table tbody tr:hover {
    background-color: #f5f5f5;
}

.record-user-photo {
    width: 2vw;
    min-width: 32px;
    height: 2vw;
    min-height: 32px;
    border-radius: 50%;
    object-fit: cover;
}

.record-user-username {
    font-weight: normal;
    font-size: larger;
    position: relative;
    display: inline-block;
    cursor: pointer;
    transition: all 0.3s ease;
}

.record-user-username:hover {
    color: #007bff;
}

.record-user-username:hover::after {
    transform: scaleX(1);
    transform-origin: bottom left;
    height: 2px;
}

.record-user-username::after {
    content: '';
    position: absolute;
    width: 100%;
    transform: scaleX(0);
    height: 2px;
    bottom: 0;
    left: 0;
    background-color: #000000;
    transform-origin: bottom right;
    transition: transform 0.1s ease-out;
}

.a-win {
    color: blue;
    font-weight: bold;
}

.b-win {
    color: red;
    font-weight: bold;
}

.draw {
    color: cyan;
    font-weight: bold;
}

.pagination-nav {
    display: flex;
    justify-content: flex-end;
    margin-top: 20px;
}

.pagination {
    margin: 0;
}

.page-item {
    cursor: pointer;
}

.page-item.disabled {
    cursor: not-allowed;
}

.page-item.disabled .page-link {
    color: #6c757d;
    pointer-events: none;
    background-color: #fff;
    border-color: #dee2e6;
}

.page-item.active .page-link {
    background-color: #007bff;
    border-color: #007bff;
    color: white;
}

.page-link {
    color: #007bff;
    text-decoration: none;
    padding: 0.5rem 0.75rem;
    margin-left: -1px;
    line-height: 1.25;
    border: 1px solid #dee2e6;
    transition: all 0.3s ease;
}

.page-link:hover {
    color: #0056b3;
    background-color: #e9ecef;
    border-color: #dee2e6;
}

.btn-sm {
    padding: 0.25rem 0.5rem;
    font-size: 0.875rem;
    line-height: 1.5;
    border-radius: 0.2rem;
}

.text-center {
    text-align: center;
}

.text-left {
    text-align: left;
}
</style>